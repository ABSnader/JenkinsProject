
pipeline{

      agent {
                docker {
                image 'maven:3-openjdk-11'

                }
            }
	     environment {
    DOCKERHUB_CREDENTIALS = credentials('rchouda911-dockerhub')
  }
        
        stages{
        stage('Junit + Mock  Testing...') {
              steps {
                 sh 'echo "Test is processing ...."'
              }
            }

	
	   stage('Quality Gate Status Checking ...'){
                  steps{
                      script{
			      withSonarQubeEnv('sonarserver') { 
			      sh "mvn compile sonar:sonar"
                       	     	}
			      timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status != 'OK') {
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    sh "mvn clean install"
		  
                 	
               	 }  
              }
	      }
	      
	      	 stage("Maven Building ...") {
            steps {
                script {
		sh 'echo "Building jar .... ...."'
                    sh "mvn package -DskipTests=true"
                }
            }
        }


 stage("Publish to Nexus Repository Manager ...") {
            steps {
   		sh 'echo "Publishing jar...."'

	    }
        }
	        stage('E-mail Notification...') {
              steps {
emailext attachLog: true, body: 'Hello, you will find below a Jenkins Build Log !', compressLog: true, subject: 'Response from Jenkins !', to: 'rached.bouyahi@esprit.tn'

              }
            }
	    stage('Build') {
      steps {
        sh 'docker build -t rchouda911/springboot-k8s-deployment:1.0 .'
      }
    }
    stage('Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Push') {
      steps {
        sh 'docker push rchouda911/springboot-k8s-deployment:1.0'
      }
    }
  }


}
}


